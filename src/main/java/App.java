import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.InputStream;
import java.sql.*;
import java.util.Properties;

public class App {

    private static final Logger log = LoggerFactory.getLogger(App.class);

    public static void main(String[] args) {
        // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        Properties props = new Properties();
        try (InputStream is = App.class.getClassLoader().getResourceAsStream("application.properties")) {
            if (is == null) {
                log.error("–§–∞–π–ª application.properties –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ classpath!");
                return;
            }
            props.load(is);
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ application.properties", e);
            return;
        }

        String url = props.getProperty("db.url");
        String user = props.getProperty("db.user");
        String password = props.getProperty("db.password");

        if (url == null || user == null || password == null) {
            log.error("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ application.properties");
            return;
        }

        try (Connection conn = DriverManager.getConnection(url, user, password)) {
            log.info("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL.");

            // 1. –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            try (PreparedStatement ps = conn.prepareStatement(
                    "INSERT INTO customer (first_name, last_name, email) VALUES (?, ?, ?)")) {
                ps.setString(1, "–¢–µ—Å—Ç");
                ps.setString(2, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
                ps.setString(3, "test@jdbc.com");
                ps.executeUpdate();
                log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: –¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
            }

            // 2. –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –∑–∞–∫–∞–∑–æ–≤ —Å JOIN
            String query = """
                SELECT c.first_name, c.last_name, p.description, o.quantity, o.order_date
                FROM "order" o
                JOIN customer c ON o.customer_id = c.id
                JOIN product p ON o.product_id = p.id
                ORDER BY o.order_date DESC
                LIMIT 5
                """;

            try (Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(query)) {
                log.info("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–∫–∞–∑–æ–≤:");
                while (rs.next()) {
                    log.info("  {} {} ‚Äî {} (x{}) ‚Äî {}",
                            rs.getString("first_name"),
                            rs.getString("last_name"),
                            rs.getString("description"),
                            rs.getInt("quantity"),
                            rs.getTimestamp("order_date"));
                }
            }

            // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞
            try (PreparedStatement ps = conn.prepareStatement(
                    "UPDATE product SET price = price * 1.1 WHERE description = ?")) {
                ps.setString(1, "–ö–æ–≤—Ä–∏–∫ –¥–ª—è –º—ã—à–∏");
                int updated = ps.executeUpdate();
                log.info("üìà –û–±–Ω–æ–≤–ª–µ–Ω–æ {} –∑–∞–ø–∏—Å–µ–π (—Ü–µ–Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ –Ω–∞ 10%)", updated);
            }

            // 4. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            try (PreparedStatement ps = conn.prepareStatement(
                    "DELETE FROM customer WHERE email = ?")) {
                ps.setString(1, "test@jdbc.com");
                int deleted = ps.executeUpdate();
                log.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", deleted);
            }

            log.info("‚úÖ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.");
        } catch (SQLException e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö", e);
        }
    }
}